上面的代码一定会编译出错的因为编译器蒙了在面向对象语言中规定一个普通类必须实现接口中的所有方法而在上面的代码中method2方法未实现而编译器无法判断MyClass类是抽象类，还是普通类。如果按着普通类来处理，则会编译出错，如果按着抽象类来处理则完全符合面向对象规则因此就产生了歧议当编译器在编译源代码时一定会产生错误否则可能会编译成和源代码的含义不同的二进制目标文件当然上面的代码也可以设置默认的规则也就是按着普通类处理不通过时就按着抽象类来处理但这又会带来另一个问题如果开发人员忘记实现某个接口的方法，那不是这个类就会被编译器认为是抽象类了吗？因此，为了保险起见，编译器的设计者特意为抽象类指定一个abstract关键字也就是说这个类是否是抽象类应由开发人员通过编码的方式来指定而不是由编译器自做主张 从上面的描述可以看出加abstract关键字主要是为了避免普通类在实现接口时产生的歧议如果假设面向对象语言中没有接口abstract关键字完全可以去掉当然继承抽象类也和实现接口类似象面向对象语言中的静态方法很多就没有静态类的概念Java没有C#有因此在定义类时加不加static并不会产生奇异所以static关键字在定义静态类时也就不是必须的了